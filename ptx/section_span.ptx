<?xml version="1.0" encoding="UTF-8" ?>

<section xml:id="sec-span">
  <title>Span</title>
  <p>
    Recall that a <term>linear combination</term> of a set of vectors
    <m>\vv_1,\ldots, \vv_k</m> is a vector expression of the form
    <me>
      \ww=c_1\vv_1+c_2\vv_2+\cdots +c_k\vv_k,
    </me>
    where <m>c_1,\ldots, c_k</m> are scalars.
  </p>

  <p>
    The <term>span</term> of those same vectors is the set of all possible linear combinations:
    <me>
      \spn\{\vv_1,\ldots, \vv_k\} = \{c_1\vv_1+ \cdots + c_k\vv_k \,|\, c_1,\ldots, c_k \in \mathbb{F}\}.
    </me>
    Therefore, the questions <q>Is the vector <m>\ww</m> in <m>\spn\{\vv_1,\ldots, \vv_k\}</m>?</q>
    is really asking, <q>Can <m>\ww</m> be written as a linear combination of <m>\vv_1,\ldots, \vv_k</m>?</q>
  </p>

  <p>
    With the appropriate setup, all such questions become questions about solving systems of equations.
    Here, we will look at a few such examples.
  </p>

  <exercise>
    <statement>
      <p>
        Determine whether the vector <m>\bbm 2\\3\ebm</m> is in the span of the vectors <m>\bbm 1\\1\ebm,\bbm -1\\2\ebm</m>.
      </p>
    </statement>
    <solution>
      <p>
        This is really asking: are there scalars <m>s,t</m> such that
        <me>
          s\bbm 1\\1\ebm + t\bbm -1\\2\ebm = \bbm 2\\3\ebm
        </me>?
        And this, in turn, is equivalent to the system
        <md>
          <mrow>s -t \amp=2 </mrow>
          <mrow>s+2t \amp=3 </mrow>
        </md>,
        which is the same as the matrix equation
        <me>
          \bbm 1\amp -1\\1\amp 2\ebm\bbm s\\t\ebm = \bbm 2\\3\ebm.
        </me>
        Solving the system confirms that there is indeed a solution, so the answer to our original question is yes.
      </p>

      <p>
        To confirm the above example (and see what the solution is), we can use the computer.
        This first code cell loads the <c>sympy</c> Python library,
        and then configures the output to look nice.
        For details on the code used below, see <xref ref="ch-computation" text="custom">the Appendix</xref>.
      </p>

      <sage>
        <input>
          from sympy import Matrix, init_printing
          init_printing()
          A = Matrix(2,3,[1,-1,2,1,2,3])
          A.rref()
        </input>
        <output>
          \[\bbm 1\amp 0\amp \frac73\\0\amp 1\amp \frac13\ebm, (0,1)\]
        </output>
      </sage>

      <p>
        The above code produces the reduced row-echelon form of the augmented matrix for our system.
        (The tuple <m>(0,1)</m> lists the pivot columns <mdash/> note that Python indexes the columns starting at <m>0</m> rather than <m>1</m>.)
        Do you remember how to get the answer from here? Here's another approach.
      </p>

      <sage>
        <input>
          B = Matrix(2,2,[1,-1,1,2])
          B
        </input>
        <output>
          \[\bbm 1\amp -1\\1\amp 2\ebm\]
        </output>
      </sage>

      <sage>
        <input>
          C = Matrix(2,1,[2,3])
          X = (B**-1)*C
          X
        </input>
        <output>
          \[\bbm \frac 73\\\frac13\ebm\]
        </output>
      </sage>
    </solution>
  </exercise>

  <p>
    Our next example involves polynomials.
    At first this looks like a different problem,
    but it's essentially the same once we set it up.
  </p>

  <exercise>
    <statement>
      <p>
        Determine whether <m>p(x)=1+x+4x^2</m> belongs to
        <m>\spn\{1+2x-x^2,3+5x+2x^2\}</m>.
      </p>
    </statement>
    <solution>
      <p>
        We seek scalars <m>s,t</m> such that
        <me>
          s(1+2x-2x^2)+t(3+5x+2x^2)=1+x+4x^2
        </me>.
        On the left-hand side, we expand and gather terms:
        <me>
          (s+3t)+(2s+5t)x+(-2s+2t)x^2 = 1+x+4x^2
        </me>.
        These two polynomials are equal if and only if we can solve the system
        <md>
          <mrow>s+3t \amp = 1 </mrow>
          <mrow>2s+5t \amp =1</mrow>
          <mrow> -2s+2t \amp =4</mrow>
        </md>.
      </p>

      <p>
        We can solve this computationally using matrices again.
      </p>
      <sage>
        <input>
          from sympy import Matrix, init_printing
          init_printing()
          M = Matrix(3,3,[1,3,1,2,5,1,-2,2,4])
          M.rref()
        </input>
        <output>
          \[\bbm 1\amp 0\amp 0\\0\amp 1\amp 0\\0\amp 0\amp 1\ebm, (0,1,2)\]
        </output>
      </sage>
      <p>
        So, what's the answer? Is <m>p(x)</m> in the span?
        Can we determine what polynomials are in the span?
        Let's consider a general polynomial <m>q(x)=a+bx+cx^2</m>.
        A bit of thought tells us that the coefficients <m>a,b,c</m>
        should replace the constants <m>1,1,4</m> above.
      </p>

      <sage>
        <input>
          from sympy import symbols
          a, b, c = symbols('a b c', real = True, constant = True)
          N = Matrix(3,3,[1,3,a,2,5,b,-2,2,c])
          N
        </input>
        <output>
          \[\bbm 1\amp 3\amp a\\2\amp 5\amp b\\-2\amp 2\amp c\ebm\]
        </output>
      </sage>

      <p>
        Asking the computer to reduce this matrix to <init>RREF</init> won't produce the desired result.
        But we can always specify row operations.
      </p>

      <sage>
        <input>
          N1 = N.elementary_row_op(op='n-&gt;n+km',row=1,k=-2,row2=0)
          N1
        </input>
        <output>
          \[\bbm 1\amp 3\amp a\\0\amp -1\amp -2a+b\\-2\amp 2\amp c\ebm\]
        </output>
      </sage>

      <p>
        In the <c>elementary_row_op</c> function called above,
        we are asking the computer to change row <m>1</m> (the second row)
        by adding <m>-2</m> times row <m>0</m> )the first row).
        See <xref ref="subsec-sympy-matrix">Section</xref> for complete details on this syntax.
      </p>

      <p>
        Now we repeat. Here is another cell to work with:
      </p>

      <sage>

      </sage>

      <p>
        Another option is to replace the <c>rref()</c> function with the
        <c>echelon_form()</c> function, which doesn't simplify quite as far:
      </p>

      <sage>
        <input>
          a, b, c = symbols('a b c', real = True, constant = True)
          N = Matrix(3,3,[1,3,a,2,5,b,-2,2,c])
          N.echelon_form()
        </input>
        <output>
          \[\bbm 1\amp 3\amp a\\0\amp -1\amp -2a+b\\0\amp 0\amp 14a-8b-c\ebm\]
        </output>
      </sage>

      <p>
        For a consistent system, we need <m>c=14a-8b</m>.
      </p>
    </solution>
  </exercise>


  <p>
    One of the reasons we care about linear combinations and span is that it gives us an easy means of generating subspaces,
    as the following theorem suggests.
  </p>

  <theorem xml:id="thm-span-is-subspace">
    <statement>
      <p>
        Let <m>V</m> be a vector space, and let <m>\vv_1,\vv_2,\ldots, \vv_k</m> be vectors in <m>V</m>. Then:
        <ol>
          <li>
            <p>
              <m>U=\spn\{\vv_1,\vv_2,\ldots, \vv_k\}</m> is a subspace of <m>V</m>.
            </p>
          </li>

          <li>
            <p>
              <m>U</m> is the <em>smallest</em> subspace of  <m>V</m> containing <m>\vv_1,\ldots, \vv_k</m>,
              in the sense that if <m>W\subseteq V</m> is a subspace and <m>\vv_1,\ldots, \vv_k\in W</m>,
              then <m>U\subseteq W</m>.
            </p>
          </li>
        </ol>
      </p>
    </statement>
    <proof>
      <p>
        Let <m>U=\spn\{\vv_1,\vv_2,\ldots, \vv_k\}</m>. Then <m>0\in U</m>,
        since <m>0=0\vv_1+0\vv_2+\cdots + 0\vv_k</m>.
        If <m>\uu=a_1\vv_1+a_2\vv_2+\cdots +a_k\vv_k</m> and <m>\ww=b_1\vv_1+b_2\vv_2+\cdots +b_k\vv_k</m>
        are vectors in <m>U</m>, then
        <md>
          <mrow>\uu+\ww \amp =(a_1\vv_1+a_2\vv_2+\cdots +a_k\vv_k)+(b_1\vv_1+b_2\vv_2+\cdots +b_k\vv_k)</mrow>
          <mrow> \amp = (a_1+b_1)\vv_1+(a_2+b_2)\vv_2+\cdots + (a_k+b_k)\vv_k</mrow>
        </md>
        is in <m>U</m>, and
        <md>
          <mrow>c\uu \amp =c(a_1\vv_1+a_2\vv_2+\cdots +a_k\vv_k)</mrow>
          <mrow> \amp =(ca_1)\vv_1+(ca_2)\vv_2+\cdots + (ca_k)\vv_k</mrow>
        </md>
        is in <m>U</m>, so by <xref ref="thm-subspace-test">Theorem</xref>,
        <m>U</m> is a subspace.
      </p>

      <p>
        To see that <m>U</m> is the smallest subspace containing <m>\vv_1,\ldots, \vv_k</m>,
        we need only note that if <m>\vv_1,\ldots, \vv_k\in W</m>,
        where <m>W</m> is a subspace, then since <m>W</m> is closed under scalar multiplication,
        we know that <m>c_1\vv_1,\ldots, c_k\vv_k</m> for any scalars <m>c_1,\ldots, c_k</m>,
        and since <m>W</m> is closed under addition, <m>c_1\vv_1+\cdots+c_k\vv_k\in W</m>.
        Thus, <m>W</m> contains all linear combinations of <m>\vv_1,\ldots, \vv_k</m>,
        which is to say that <m>W</m> contains <m>U</m>.
      </p>
    </proof>

  </theorem>

  <p>
    We end this section with a few non-computational, but useful results,
    which will be left as exercises to be done in class, or by the reader.
  </p>

  <exercise>
    <statement>
      <p>
        Let <m>V</m> be a vector space, and let <m>X,Y\subseteq V</m>.
        Show that if <m>X\subseteq Y</m>, then <m>\spn X \subseteq \spn Y</m>.
      </p>
    </statement>
  </exercise>

  <exercise>
    <statement>
      <p>
        Can <m>\{(1,2,0), (1,1,1)\}</m> span <m>\{(a,b,0)\,|\, a,b \in\R\}</m>?
      </p>
    </statement>
  </exercise>

  <theorem xml:id="theorem-surplus-span">
    <statement>
      <p>
        Let <m>V</m> be a vector space, and let <m>\vv_1,\ldots, \vv_k\in V</m>.
        If <m>\uu\in \spn\{\vv_1,\ldots, \vv_k\}</m>, then
        <me>
          \spn\{\uu,\vv_1,\ldots, \vv_k\} = \spn\{\vv_1,\ldots, \vv_k\}
        </me>.
      </p>
    </statement>
  </theorem>

  <p>
    The moral of <xref ref="theorem-surplus-span">Theorem</xref>
    is that one vector in a set is a linear combination of the others,
    we can remove it from the set without affecting the span.
    This suggests that we might want to look for the most <q>efficient</q>
    spanning sets <ndash /> those in which no vector in the set can be written in terms of the others.
    Such sets are called <term>linearly independent</term>,
    and they are the subject of <xref ref="sec-independence">Section</xref>.
  </p>
</section>
